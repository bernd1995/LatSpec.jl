name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      # Codecov
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Instantiate Package
        run: |
          julia --project=docs -e '
            import Pkg; Pkg.add("Documenter")
            using Pkg
            Pkg.develop(Pkg.PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - name: Test Docs
        run: |
          julia --project=docs -e '
            import Pkg; Pkg.add("Documenter")
            using Documenter: doctest
            using LatSpec
            doctest(LatSpec)'
      - name: Create and deploy Docs
        run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - name: Post Docs-link to PR
        if: ${{ github.event_name == 'pull_request'}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            **The Docs for this PR are deployed!** ðŸ¥³
            You can find them [here](https://bernd1995.github.io/LatSpec.jl/previews/PR${{ github.event.number }}).

            Please make sure that you have documented your new feature properly:
              - [] Added documentation (if needed).
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' 
          allow-repeats: false # This is the default
      - name: Checkout gh-pages branch
        if: "contains(env.COMMIT_MSG, '#')"   # only filled on push not on pr
        uses: actions/checkout@v2
        with:
          ref: gh-pages
        env:
          COMMIT_MSG: ${{ github.event.commits[0].message }}
      - name: Cleanup Docs branch
        if: "contains(env.COMMIT_MSG, '#')"   # only filled on push not on pr
        run: |
          git config user.name "LatSpec.jl-Documenter"
          git config user.email "20151553+bernd1995@users.noreply.github.com"
          for i in `sed -re 's/[^#]*#*([^ )\,]*)/\1 /g' <<< "$COMMIT_MSG"`
          do
            git rm -rfq  "previews/PR$i"
          done
          git commit -m "Delete previews"
          git branch gh-pages-new $(echo "Delete history" | git commit-tree HEAD^{tree})
        env:
          COMMIT_MSG: ${{ github.event.commits[0].message }}
      - name: Push changes
        if: "contains(env.COMMIT_MSG, '#')"   # only filled on push not on pr
        run: |
          git push --force origin gh-pages-new:gh-pages
        env:
          COMMIT_MSG: ${{ github.event.commits[0].message }}
