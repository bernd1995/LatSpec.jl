name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      # Codecov
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      # - name: Instantiate Package
      #   run: |
      #     julia --project=docs -e '
      #       import Pkg; Pkg.add("Documenter")
      #       using Pkg
      #       Pkg.develop(Pkg.PackageSpec(path=pwd()))
      #       Pkg.instantiate()'
      # - name: Test Docs
      #   run: |
      #     julia --project=docs -e '
      #       import Pkg; Pkg.add("Documenter")
      #       using Documenter: doctest
      #       using LatSpec
      #       doctest(LatSpec)'
      # - name: Create and deploy Docs
      #   run: julia --project=docs docs/make.jl
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - name: Checkout gh-pages branch
        #if: "github.event_name == 'push' &&  contains(github.event.head_commit.message, '#')"
        run: echo "${{github.event.commits[0].message}}"
        run: echo "$COMMIT_MSG"
        env:
          COMMIT_MSG: ${{ github.event.commits[0].message }}
      #   if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
      #   uses: actions/checkout@v2
      #   with:
      #     ref: gh-pages
      # - name: Cleanup Docs branch
      #   if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
      #   run: |
      #       git config user.name "LatSpec.jl-Documenter"
      #       git config user.email "20151553+bernd1995@users.noreply.github.com"
      #       git rm -rf "previews/PR$PRNUM"
      #       git commit -m "Delete previews"
      #       git branch gh-pages-new $(echo "Delete history" | git commit-tree HEAD^{tree})
      #   env:
      #     PRNUM: ${{ github.event.number }}
      # - name: Push changes
      #   if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
      #   run: |
      #       git push --force origin gh-pages-new:gh-pages
